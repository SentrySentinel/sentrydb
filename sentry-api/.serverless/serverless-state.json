{
  "service": {
    "service": "sentry-api",
    "serviceObject": {
      "name": "sentry-api"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "vpc": {
        "securityGroupIds": [
          "sg-5a03b871"
        ],
        "subnetIds": [
          "subnet-570e1430",
          "subnet-2a648375",
          "subnet-2551b004",
          "subnet-dd09d5d3",
          "subnet-cb90bef5",
          "subnet-38389275"
        ]
      },
      "environment": {
        "RDS_HOSTNAME": "sentrydb3.czhll2nnhhc9.us-east-1.rds.amazonaws.com",
        "RDS_USERNAME": "admin",
        "RDS_PASSWORD": "admin1234",
        "RDS_PORT": 3306
      },
      "tags": {
        "service": "sentry-api"
      },
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "GetSentryApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sentry-api-dev-getSentryApi"
            }
          },
          "AuthenticateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sentry-api-dev-authenticate"
            }
          },
          "UpdateGeolocationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sentry-api-dev-updateGeolocation"
            }
          },
          "SignInLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sentry-api-dev-signIn"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "sentry-api",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sentry-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sentry-api-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "sentry-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "GetSentryApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sentry-api/dev/1588127720052-2020-04-29T02:35:20.052Z/getSentryApi.zip"
              },
              "FunctionName": "sentry-api-dev-getSentryApi",
              "Handler": "src/function/getSentryApi/index.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "service",
                  "Value": "sentry-api"
                }
              ],
              "Environment": {
                "Variables": {
                  "RDS_HOSTNAME": "sentrydb3.czhll2nnhhc9.us-east-1.rds.amazonaws.com",
                  "RDS_USERNAME": "admin",
                  "RDS_PASSWORD": "admin1234",
                  "RDS_PORT": 3306
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-5a03b871"
                ],
                "SubnetIds": [
                  "subnet-570e1430",
                  "subnet-2a648375",
                  "subnet-2551b004",
                  "subnet-dd09d5d3",
                  "subnet-cb90bef5",
                  "subnet-38389275"
                ]
              }
            },
            "DependsOn": [
              "GetSentryApiLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetSentryApiLambdaVersion8WAxIVXCUraFK0ZuTddwZ9GOtPdtNwI2L52vctgm9M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetSentryApiLambdaFunction"
              },
              "CodeSha256": "lDb9WyUQ4H/Pt12IKkH1hT3k7EJHz81tzcxUFO0LuOE="
            }
          },
          "AuthenticateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sentry-api/dev/1588127720052-2020-04-29T02:35:20.052Z/authenticate.zip"
              },
              "FunctionName": "sentry-api-dev-authenticate",
              "Handler": "src/function/authenticate/index.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "service",
                  "Value": "sentry-api"
                }
              ],
              "Environment": {
                "Variables": {
                  "RDS_HOSTNAME": "sentrydb3.czhll2nnhhc9.us-east-1.rds.amazonaws.com",
                  "RDS_USERNAME": "admin",
                  "RDS_PASSWORD": "admin1234",
                  "RDS_PORT": 3306
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-5a03b871"
                ],
                "SubnetIds": [
                  "subnet-570e1430",
                  "subnet-2a648375",
                  "subnet-2551b004",
                  "subnet-dd09d5d3",
                  "subnet-cb90bef5",
                  "subnet-38389275"
                ]
              }
            },
            "DependsOn": [
              "AuthenticateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AuthenticateLambdaVersioniq0hrzxOA4kqck4XBwkfaA7YFNEiGoMqZRVbBS244": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthenticateLambdaFunction"
              },
              "CodeSha256": "58JSMT1BpVEbX4TwtMLDDmwYDnp2hm5FrgXPl9LO8lU="
            }
          },
          "UpdateGeolocationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sentry-api/dev/1588127720052-2020-04-29T02:35:20.052Z/updateGeolocation.zip"
              },
              "FunctionName": "sentry-api-dev-updateGeolocation",
              "Handler": "src/function/updateGeolocation/index.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "service",
                  "Value": "sentry-api"
                }
              ],
              "Environment": {
                "Variables": {
                  "RDS_HOSTNAME": "sentrydb3.czhll2nnhhc9.us-east-1.rds.amazonaws.com",
                  "RDS_USERNAME": "admin",
                  "RDS_PASSWORD": "admin1234",
                  "RDS_PORT": 3306
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-5a03b871"
                ],
                "SubnetIds": [
                  "subnet-570e1430",
                  "subnet-2a648375",
                  "subnet-2551b004",
                  "subnet-dd09d5d3",
                  "subnet-cb90bef5",
                  "subnet-38389275"
                ]
              }
            },
            "DependsOn": [
              "UpdateGeolocationLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UpdateGeolocationLambdaVersionFkY9Zg5HTK46p2z3oxmD3uZ7JQJovxESoBPcbPQFU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateGeolocationLambdaFunction"
              },
              "CodeSha256": "NWP+O9VeBI/Q0JkMCU+f9ZnPENxrZrm7NfTxRzn6w9M="
            }
          },
          "SignInLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sentry-api/dev/1588127720052-2020-04-29T02:35:20.052Z/signIn.zip"
              },
              "FunctionName": "sentry-api-dev-signIn",
              "Handler": "src/function/signIn/index.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "service",
                  "Value": "sentry-api"
                }
              ],
              "Environment": {
                "Variables": {
                  "RDS_HOSTNAME": "sentrydb3.czhll2nnhhc9.us-east-1.rds.amazonaws.com",
                  "RDS_USERNAME": "admin",
                  "RDS_PASSWORD": "admin1234",
                  "RDS_PORT": 3306
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-5a03b871"
                ],
                "SubnetIds": [
                  "subnet-570e1430",
                  "subnet-2a648375",
                  "subnet-2551b004",
                  "subnet-dd09d5d3",
                  "subnet-cb90bef5",
                  "subnet-38389275"
                ]
              }
            },
            "DependsOn": [
              "SignInLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SignInLambdaVersionFD9kBRYNIti3Mr4QAdXvSaUFaPyRO6vJrJHNtZ5vPQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignInLambdaFunction"
              },
              "CodeSha256": "NDlMpT5tW03y5m7tgFz3MyQnHkWD0ywMjucMleZx22o="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-sentry-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceGetsentryapi": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "get_sentry_api",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAuthenticate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "authenticate",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAuthenticateRfidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAuthenticate"
              },
              "PathPart": "{RFID}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUpdategeolocation": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "updateGeolocation",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUpdategeolocationRfidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUpdategeolocation"
              },
              "PathPart": "{RFID}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSignin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "signIn",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSigninRfidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceSignin"
              },
              "PathPart": "{RFID}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGetsentryapiGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGetsentryapi"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetSentryApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodAuthenticateRfidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthenticateRfidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AuthenticateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUpdategeolocationRfidVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpdategeolocationRfidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateGeolocationLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodSigninRfidVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSigninRfidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignInLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1588127699672": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGetsentryapiGet",
              "ApiGatewayMethodAuthenticateRfidVarGet",
              "ApiGatewayMethodUpdategeolocationRfidVarPost",
              "ApiGatewayMethodSigninRfidVarPost"
            ]
          },
          "GetSentryApiLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetSentryApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthenticateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthenticateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateGeolocationLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateGeolocationLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SignInLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignInLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GetSentryApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetSentryApiLambdaVersion8WAxIVXCUraFK0ZuTddwZ9GOtPdtNwI2L52vctgm9M"
            }
          },
          "AuthenticateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthenticateLambdaVersioniq0hrzxOA4kqck4XBwkfaA7YFNEiGoMqZRVbBS244"
            }
          },
          "UpdateGeolocationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateGeolocationLambdaVersionFkY9Zg5HTK46p2z3oxmD3uZ7JQJovxESoBPcbPQFU"
            }
          },
          "SignInLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignInLambdaVersionFD9kBRYNIti3Mr4QAdXvSaUFaPyRO6vJrJHNtZ5vPQ"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "getSentryApi": {
        "handler": "src/function/getSentryApi/index.handler",
        "events": [
          {
            "http": {
              "path": "get_sentry_api",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sentry-api-dev-getSentryApi",
        "package": {
          "artifact": ".serverless/getSentryApi.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      },
      "authenticate": {
        "handler": "src/function/authenticate/index.handler",
        "events": [
          {
            "http": {
              "path": "authenticate/{RFID}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sentry-api-dev-authenticate",
        "package": {
          "artifact": ".serverless/authenticate.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      },
      "updateGeolocation": {
        "handler": "src/function/updateGeolocation/index.handler",
        "events": [
          {
            "http": {
              "path": "updateGeolocation/{RFID}",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sentry-api-dev-updateGeolocation",
        "package": {
          "artifact": ".serverless/updateGeolocation.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      },
      "signIn": {
        "handler": "src/function/signIn/index.handler",
        "events": [
          {
            "http": {
              "path": "signIn/{RFID}",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sentry-api-dev-signIn",
        "package": {
          "artifact": ".serverless/signIn.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/sentry-api/dev/1588127720052-2020-04-29T02:35:20.052Z",
    "artifact": ""
  }
}